{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { ReportService } from 'src/app/core/services/report.service';\nlet ReportsComponent = class ReportsComponent {\n  constructor(reportService) {\n    this.reportService = reportService;\n    this.reports = [];\n    this.loading = false;\n    this.error = null;\n    this.selectedMonth = new Date().getMonth() + 1;\n    this.selectedCourseId = '';\n    this.selectedEmployeeId = '';\n    this.currentMode = null;\n  }\n\n  selectMode(mode) {\n    this.currentMode = mode;\n    this.error = null;\n    this.reports = [];\n  }\n\n  getReportsByMonth() {\n    if (this.selectedMonth < 1 || this.selectedMonth > 12) {\n      this.error = 'אנא הכנס חודש תקין בין 1 ל-12';\n      return;\n    }\n\n    this.loading = true;\n    this.error = null;\n    this.reportService.getReportsByMonth(this.selectedMonth).subscribe({\n      next: data => {\n        console.log('Month Reports:', data); // ← בדיקה חשובה\n\n        this.reports = data;\n        this.loading = false;\n      },\n      error: err => {\n        this.error = 'שגיאה בטעינת הדוחות לפי חודש';\n        console.error(err); // ← חשוב!\n\n        this.loading = false;\n      }\n    });\n  }\n\n  getReportsByCourse() {\n    if (!this.selectedCourseId.trim()) {\n      this.error = 'אנא הכנס קוד קורס';\n      return;\n    }\n\n    this.loading = true;\n    this.error = null;\n    this.reportService.getReportsByCourse(this.selectedCourseId).subscribe({\n      next: data => {\n        this.reports = data;\n        this.loading = false;\n      },\n      error: () => {\n        this.error = 'שגיאה בטעינת הדוחות לפי קורס';\n        this.loading = false;\n      }\n    });\n  }\n\n  getReportsByEmployee() {\n    if (!this.selectedEmployeeId.trim()) {\n      this.error = 'אנא הכנס תעודת זהות של עובד';\n      return;\n    }\n\n    this.loading = true;\n    this.error = null;\n    this.reportService.getReportsByEmployee(this.selectedEmployeeId).subscribe({\n      next: data => {\n        this.reports = data;\n        this.loading = false;\n      },\n      error: () => {\n        this.error = 'שגיאה בטעינת הדוחות לפי עובד';\n        this.loading = false;\n      }\n    });\n  }\n\n};\nReportsComponent = __decorate([Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.css']\n}), __metadata(\"design:paramtypes\", [ReportService])], ReportsComponent);\nexport { ReportsComponent };","map":null,"metadata":{},"sourceType":"module"}