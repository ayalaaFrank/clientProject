{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nimport { Component } from '@angular/core';\nimport { CourseService } from 'src/app/core/services/course.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\nlet CoursesListComponent = class CoursesListComponent {\n  constructor(courseService, authService) {\n    this.courseService = courseService;\n    this.authService = authService;\n    this.courses = [];\n    this.showAddForm = false;\n    this.newCourse = {\n      courseName: '',\n      courseType: ''\n    };\n    this.isAdminUser = false;\n  }\n\n  ngOnInit() {\n    this.loadCourses();\n    this.authService.getUserInfo().subscribe(user => {\n      this.isAdminUser = user.isAdmin;\n    });\n  }\n\n  loadCourses() {\n    this.courseService.getCourses().subscribe(courses => {\n      this.courses = courses;\n    });\n  }\n\n  addCourse() {\n    this.courseService.addCourse(this.newCourse).subscribe({\n      next: course => {\n        this.courses.push(course);\n        this.newCourse = {\n          courseName: '',\n          courseType: ''\n        };\n        this.showAddForm = false;\n      },\n      error: () => {\n        alert('שגיאה בהוספת קורס');\n      }\n    });\n  }\n\n  editCourse(course) {// כאן תוכלי לפתוח טופס עריכה\n  }\n\n  deleteCourse(id) {\n    this.courseService.deleteCourse(id).subscribe(() => {\n      this.courses = this.courses.filter(c => c.courseId !== id);\n    });\n  }\n\n  isAdmin() {\n    return localStorage.getItem('isAdmin') === 'true';\n  }\n\n};\nCoursesListComponent = __decorate([Component({\n  selector: 'app-courses-list',\n  templateUrl: './courses-list.component.html',\n  styleUrls: ['./courses-list.component.css']\n}), __metadata(\"design:paramtypes\", [CourseService, typeof (_a = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _a : Object])], CoursesListComponent);\nexport { CoursesListComponent };","map":null,"metadata":{},"sourceType":"module"}